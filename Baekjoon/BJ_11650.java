package Baekjoon;
import java.util.*;
import java.io.*;

/*2차원 평면 위의 점 N개가 주어진다. 좌표를 x좌표가 증가하는 순으로, x좌표가 같으면 y좌표가 증가하는 순서로 정렬한 다음 출력하는 프로그램을 작성하시오.
 *첫째 줄에 점의 개수 N (1 ≤ N ≤ 100,000)이 주어진다. 둘째 줄부터 N개의 줄에는 i번점의 위치 xi와 yi가 주어진다. (-100,000 ≤ xi, yi ≤ 100,000) 좌표는 항상 정수이고, 위치가 같은 두 점은 없다.
 *첫째 줄부터 N개의 줄에 점을 정렬한 결과를 출력한다.
 */

public class BJ_11650 {
	public static void main(String args[]) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
		int N = Integer.parseInt(br.readLine());
		int[][] xy = new int[N][2];
		for(int i = 0; i < N; i++) {
			String[] str = br.readLine().split(" ");
			for(int j = 0; j < 2; j++) {
				xy[i][j] = Integer.parseInt(str[j]);
			}
		}
		br.close();
		Arrays.sort(xy, new Comparator<int[]>() {	//Comparator를 이용한 2차원 배열 정렬
			@Override
			public int compare(int[] t1, int[] t2) {
				if(t1[0] == t2[0])					//앞의 값이 같으면 뒤에 값을 비교
					return t1[1] - t2[1];			//오름차순 (내림차순이면 t2[1] - t1[1];
				else
					return t1[0] - t2[0];
			}
		});
		for(int i = 0; i < N; i++) {		//정렬된 좌표 출력
			bw.write(xy[i][0] + " " + xy[i][1]);
			bw.newLine();
		}
		bw.flush();
		bw.close();
		
	}
}

