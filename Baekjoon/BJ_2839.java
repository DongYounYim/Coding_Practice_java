package Baekjoon;
import java.util.*;

/*상근이는 요즘 설탕공장에서 설탕을 배달하고 있다. 상근이는 지금 사탕가게에 설탕을 정확하게 N킬로그램을 배달해야 한다. 
 *설탕공장에서 만드는 설탕은 봉지에 담겨져 있다. 봉지는 3킬로그램 봉지와 5킬로그램 봉지가 있다.
 *상근이는 귀찮기 때문에, 최대한 적은 봉지를 들고 가려고 한다. 
 *예를 들어, 18킬로그램 설탕을 배달해야 할 때, 3킬로그램 봉지 6개를 가져가도 되지만, 5킬로그램 3개와 3킬로그램 1개를 배달하면, 더 적은 개수의 봉지를 배달할 수 있다.
 *상근이가 설탕을 정확하게 N킬로그램 배달해야 할 때, 봉지 몇 개를 가져가면 되는지 그 수를 구하는 프로그램을 작성하시오.
 *첫째 줄에 N이 주어진다. (3 ≤ N ≤ 5000)
 *상근이가 배달하는 봉지의 최소 개수를 출력한다. 만약, 정확하게 N킬로그램을 만들 수 없다면 -1을 출력한다.상근이가 배달하는 봉지의 최소 개수를 출력한다.
 *만약, 정확하게 N킬로그램을 만들 수 없다면 -1을 출력한다.
 */

public class BJ_2839 {
	public static void main(String args[]) {
		Scanner sc = new Scanner(System.in);
		int N = sc.nextInt();
		int min = 0;
		int temp = 0;
		boolean pass = false;
		//3*x + 5*y = N 이 성립하면 출력가능하고
		//이때, x + y는 최솟값이 되어야한다.
		if(isPossible(N)) {
			for(int x = 0; x < N; x++) {
				for(int y = 0; y < N; y++) {
					if(pass && 3*x + 5*y == N) {	//2번째 이상의 min값을 받을 때
						temp = x + y;
						if(temp < min) {
							min = temp;
						}
					}
					if(pass == false && 3*x + 5*y == N) {		//최초의 min값을 받을 때
						min = x + y;
						pass = true;
					}
				}
			}
			System.out.print(min);
		} else									//isPossible 이 false일 때 즉, 3과 5로 분배되지 않을 때
			System.out.println("-1");
	}
	
	public static boolean isPossible(int N) {
		for(int x = 0; x < N; x++) {
			for(int y =0; y < N; y++) {
				if(3*x + 5*y == N)
					return true;
			}
		}
		return false;
	}

}
